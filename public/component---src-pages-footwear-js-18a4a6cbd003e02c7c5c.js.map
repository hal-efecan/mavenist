{"version":3,"sources":["webpack:///./src/hooks/useSiteMetadata.js","webpack:///./src/components/footwear.js","webpack:///./src/pages/footwear.js"],"names":["useSiteMetadata","site","siteMetadata","FootwearArticles","data","articles","allMdx","edges","map","article","node","id","frontmatter","excerpt","fields","title","section","image","date","slug","fluid","childImageSharp","dates","allSitePage","edge","subSlug","context","lastmod","dayCreated","Date","getDate","monthCreated","getMonth","finalDate","formatMonth","style","boxShadow","boxSizing","key","to","color","fontSize","fontWeight","fontFamily","letterSpacing","textTransform","Footwear","template","siteUrl","siteLanguage","siteLocale","twitter","social","titleTemplate","description","pathname","twitterUsername"],"mappings":"q/LAEaA,EAAkB,WAqB3B,OArBiC,OACzBC,KAoBIC,e,mJCuDDC,EArEU,WACrB,IAAMC,EAAI,OACJC,EAAWD,EAAKE,OAAOC,MAE7B,OACE,kBAAC,IAAD,KAGMF,EAASG,KAAI,SAAAC,GAAY,IAAD,EACuBA,EAAQC,KAA7CC,EADc,EACdA,GAAIC,EADU,EACVA,YAAaC,EADH,EACGA,QAASC,EADZ,EACYA,OAC1BC,EAAgCH,EAAhCG,MAAOC,EAAyBJ,EAAzBI,QAASC,EAAgBL,EAAhBK,MAAOC,EAASN,EAATM,KACvBC,EAASL,EAATK,KACFC,EAAQH,EAAMI,gBAAgBD,MAEhCE,EAAK,GAeT,OAdAlB,EAAKmB,YAAYhB,MAAMC,KAAI,SAAAgB,GACzB,IAAMC,EAAUD,EAAKd,KAAKgB,QAAQP,KAClBK,EAAKd,KAAKgB,QAAQC,QAElC,GAAGF,IAAYN,EAAM,CAGjB,IAAMS,EAAa,IAAIC,KAAKX,GAAMY,UAC5BC,EAAe,IAAIF,KAAKX,GAAMc,WAC9BC,EAAeC,sBAAYH,GAAlB,IAAmCH,EAClDN,EAAQW,MAKZ,kBAAC,OAAD,CACAE,MAAO,CAAEC,UAAU,OAASC,UAAU,cACtCC,IAAK3B,EACL4B,GAAE,IAAMpB,GAGN,kBAAC,IAAD,KAEE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAOA,KAGd,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,KAAeJ,GACf,0BACMmB,MAAO,CAAEK,MAAM,OACfC,SAAS,UACTC,WAAW,OACXC,WAAW,wBACXC,cAAc,UACdC,cAAc,cANpB,MAOavB,GAAa,6BAC1B,kBAAC,IAAD,KAAeP,IAEjB,kBAAC,IAAD,KAAUF,W,oCCtBjBiC,UAjCE,SAAC,GAAa,EAAX1C,KAAY,IAAD,EAYpBJ,cATH+C,EAHuB,EAGvBA,SACAhC,EAJuB,EAIvBA,MACAE,EALuB,EAKvBA,MACA+B,EANuB,EAMvBA,QACAC,EAPuB,EAOvBA,aACAC,EARuB,EAQvBA,WAEIC,EAVmB,EASvBC,OACID,QAIR,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CACApC,MAAOA,EACPsC,cAAeN,EACfO,YAAW,gEACXrC,MAAK,GAAK+B,EAAU/B,EACpBsC,SAAUP,EACVC,aAAcA,EACdC,WAAYA,EACZM,gBAAiBL,IAEjB,kBAAC,IAAD,KACI,kBAAC,EAAD,U","file":"component---src-pages-footwear-js-18a4a6cbd003e02c7c5c.js","sourcesContent":["import { graphql, useStaticQuery } from 'gatsby'\n\nexport const useSiteMetadata = () => {\n    const { site } = useStaticQuery(graphql`\n    query SITE_METADATA_QUERY {\n        site {\n            siteMetadata {\n                description\n                template\n                title\n                image\n                siteUrl\n                siteLanguage\n                siteLocale\n                social {\n                    twitter\n                }\n                \n            }\n        }\n    }\n    `)\n\n    return site.siteMetadata\n}","import React from 'react'\nimport { graphql, useStaticQuery, Link } from 'gatsby'\nimport Img from 'gatsby-image';\nimport { formatMonth } from '../utils/utilityFn'\n\nimport { SectionTitle, ArticleTitle, ImgContainer,\n  Excerpt, ParentContainer, DescriptionContainer,\n  ChildContainer } from '../styled/listElements'\n\nconst FootwearArticles = () => {\n    const data = useStaticQuery(query)\n    const articles = data.allMdx.edges\n\n    return (\n      <ParentContainer>\n\n          {\n            articles.map(article => {\n              const { id, frontmatter, excerpt, fields } = article.node\n              const { title, section, image, date } = frontmatter\n              const { slug } = fields\n              const fluid = image.childImageSharp.fluid\n\n              let dates = ``\n              data.allSitePage.edges.map(edge => {\n                const subSlug = edge.node.context.slug\n                const lastMod = edge.node.context.lastmod\n\n                if(subSlug === slug) {\n                    // const day = new Date(lastMod).getDate()\n                    // const month = new Date(lastMod).getMonth()\n                    const dayCreated = new Date(date).getDate()\n                    const monthCreated = new Date(date).getMonth()\n                    const finalDate = `${formatMonth(monthCreated)} ${dayCreated}`\n                    dates = finalDate\n                  }\n              })\n\n              return (\n                <Link \n                style={{ boxShadow: `none`, boxSizing: `border-box` }}\n                key={id} \n                to={`/${slug}`}\n                >\n\n                  <ChildContainer>\n\n                    <ImgContainer>\n                      <Img fluid={fluid} />\n                    </ImgContainer>\n\n                    <DescriptionContainer>\n                      <div>\n                        <SectionTitle>{section}</SectionTitle>\n                        <span \n                              style={{ color: `grey`, \n                              fontSize: `0.65rem`,\n                              fontWeight: `bold`,\n                              fontFamily: `Helvetica, sans-serif`,\n                              letterSpacing:`0.05rem`, \n                              textTransform: `uppercase` \n                              }}> - {dates}</span><br/>\n                        <ArticleTitle>{title}</ArticleTitle>\n                      </div>\n                      <Excerpt>{excerpt}</Excerpt>\n                    </DescriptionContainer>\n                  \n                  </ChildContainer>\n\n                </Link>\n              )\n            })\n          }\n\n      </ParentContainer>\n  )\n}\n\nexport default FootwearArticles\n\nconst query = graphql`\n{\n  allSitePage(filter: {context: {slug: {regex: \"/(.*?)/\"}}}) {\n    edges {\n      node {\n        context {\n          lastmod\n          slug\n        }\n      }\n    }\n  }\n  allMdx(filter: {frontmatter: {section: {eq: \"Footwear\"}}}, sort: {fields: frontmatter___date, order: DESC}) {\n      edges {\n        node {\n          id\n          frontmatter {\n            author\n            date\n            title\n            section\n            isHero\n            image {\n              childImageSharp {\n                id\n                fluid(maxWidth: 400, quality: 80) {\n                  ...GatsbyImageSharpFluid_withWebp\n              }\n            }\n          }\n          }\n            fields {\n              slug\n            }\n          excerpt(pruneLength: 250)\n        }\n      }\n  }\n}\n`","import React from 'react'\nimport Layout from '../components/layout/layout'\nimport FootwearArticles from '../components/footwear'\n\nimport SEO from 'react-seo-component'\nimport { useSiteMetadata } from '../hooks/useSiteMetadata'\n\nimport { PageContainer } from '../styled/homePage'\n\nconst Footwear = ({ data }) => {\n\n    const {\n        template,\n        title,\n        image,\n        siteUrl,\n        siteLanguage,\n        siteLocale,\n        social: {\n            twitter\n        }\n      } =  useSiteMetadata()\n\n    return (\n        <Layout>\n            <SEO\n            title={title}\n            titleTemplate={template}\n            description={`Fashion content featuring the best established and new brands`}\n            image={`${siteUrl}${image}`}\n            pathname={siteUrl}\n            siteLanguage={siteLanguage}\n            siteLocale={siteLocale}\n            twitterUsername={twitter}\n            />\n            <PageContainer>\n                <FootwearArticles />\n            </PageContainer>\n        </Layout>\n    )\n}\n\nexport default Footwear"],"sourceRoot":""}