{"version":3,"sources":["webpack:///./src/hooks/useSiteMetadata.js","webpack:///./src/components/style.js","webpack:///./src/pages/style.js"],"names":["useSiteMetadata","site","siteMetadata","StyleArticles","articles","allMdx","edges","map","article","console","log","node","id","frontmatter","excerpt","fields","title","section","image","slug","fluid","childImageSharp","style","boxShadow","boxSizing","key","to","Style","data","template","siteUrl","siteLanguage","siteLocale","twitter","social","titleTemplate","description","pathname","twitterUsername"],"mappings":"gkMAEaA,EAAkB,WAqB3B,OArBiC,OACzBC,KAoBIC,e,uICgCDC,EA/CO,WAClB,IACMC,EADI,OACYC,OAAOC,MAE7B,OACE,kBAAC,IAAD,KAGMF,EAASG,KAAI,SAAAC,GACXC,QAAQC,IAAIF,GADU,MAEuBA,EAAQG,KAA7CC,EAFc,EAEdA,GAAIC,EAFU,EAEVA,YAAaC,EAFH,EAEGA,QAASC,EAFZ,EAEYA,OAC1BC,EAA0BH,EAA1BG,MAAOC,EAAmBJ,EAAnBI,QAASC,EAAUL,EAAVK,MAChBC,EAASJ,EAATI,KACFC,EAAQF,EAAMG,gBAAgBD,MAEpC,OACE,kBAAC,OAAD,CACAE,MAAO,CAAEC,UAAU,OAASC,UAAU,cACtCC,IAAKb,EACLc,GAAE,IAAMP,GAGN,kBAAC,IAAD,KAEE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAOA,KAGd,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,KAAeH,GAAuB,6BACtC,kBAAC,IAAD,KAAeD,IAEjB,kBAAC,IAAD,KAAUF,W,oCCEjBa,UAlCD,SAAC,GAAa,EAAXC,KAAY,IAAD,EAWjB5B,cATH6B,EAFoB,EAEpBA,SACAb,EAHoB,EAGpBA,MACAE,EAJoB,EAIpBA,MACAY,EALoB,EAKpBA,QACAC,EANoB,EAMpBA,aACAC,EAPoB,EAOpBA,WAEIC,EATgB,EAQpBC,OACID,QAIR,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIjB,MAAOA,EACPmB,cAAeN,EACfO,YAAW,4BACXlB,MAAK,GAAKY,EAAUZ,EACpBmB,SAAUP,EACVC,aAAcA,EACdC,WAAYA,EACZM,gBAAiBL,IAGrB,kBAAC,IAAD,KACI,kBAAC,EAAD,U","file":"component---src-pages-style-js-e8a21ea9cb65004113c9.js","sourcesContent":["import { graphql, useStaticQuery } from 'gatsby'\n\nexport const useSiteMetadata = () => {\n    const { site } = useStaticQuery(graphql`\n    query SITE_METADATA_QUERY {\n        site {\n            siteMetadata {\n                description\n                template\n                title\n                image\n                siteUrl\n                siteLanguage\n                siteLocale\n                social {\n                    twitter\n                }\n                \n            }\n        }\n    }\n    `)\n\n    return site.siteMetadata\n}","import React from 'react'\nimport { graphql, useStaticQuery, Link } from 'gatsby'\nimport Img from 'gatsby-image';\n\nimport { SectionTitle, ArticleTitle, ImgContainer,\n  Excerpt, ParentContainer, DescriptionContainer,\n  ChildContainer } from '../styled/listElements'\n\nconst StyleArticles = () => {\n    const data = useStaticQuery(query)\n    const articles = data.allMdx.edges\n\n    return (\n      <ParentContainer>\n\n          {\n            articles.map(article => {\n              console.log(article)\n              const { id, frontmatter, excerpt, fields } = article.node\n              const { title, section, image } = frontmatter\n              const { slug } = fields\n              const fluid = image.childImageSharp.fluid\n\n              return (\n                <Link \n                style={{ boxShadow: `none`, boxSizing: `border-box` }}\n                key={id} \n                to={`/${slug}`}\n                >\n\n                  <ChildContainer>\n\n                    <ImgContainer>\n                      <Img fluid={fluid} />\n                    </ImgContainer>\n\n                    <DescriptionContainer>\n                      <div>\n                        <SectionTitle>{section}</SectionTitle><br />\n                        <ArticleTitle>{title}</ArticleTitle>\n                      </div>\n                      <Excerpt>{excerpt}</Excerpt>\n                    </DescriptionContainer>\n                  \n                  </ChildContainer>\n\n                </Link>\n              )\n            })\n          }\n          \n      </ParentContainer>\n  )\n}\n\nexport default StyleArticles\n\nconst query = graphql`\n{\n  allMdx(filter: {frontmatter: {section: {eq: \"Style\"}}}, sort: {fields: frontmatter___date, order: DESC}) {\n      edges {\n        node {\n          id\n          frontmatter {\n            author\n            date\n            title\n            section\n            isHero\n            image {\n              childImageSharp {\n                id\n                fluid(maxWidth: 700) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          }\n            fields {\n              slug\n            }\n          excerpt(pruneLength: 250)\n        }\n      }\n  }\n}\n`","import React from 'react'\nimport Layout from '../components/layout/layout'\nimport StyleArticles from '../components/style'\n\nimport SEO from 'react-seo-component'\nimport { useSiteMetadata } from '../hooks/useSiteMetadata'\n\nimport { PageContainer } from '../styled/homePage'\n\nconst Style = ({ data }) => {\n    const {\n        template,\n        title,\n        image,\n        siteUrl,\n        siteLanguage,\n        siteLocale,\n        social: {\n            twitter\n        }\n      } =  useSiteMetadata()\n\n    return (\n        <Layout>\n            <SEO\n                title={title}\n                titleTemplate={template}\n                description={`Style advise from experts`}\n                image={`${siteUrl}${image}`}\n                pathname={siteUrl}\n                siteLanguage={siteLanguage}\n                siteLocale={siteLocale}\n                twitterUsername={twitter}\n                />\n\n            <PageContainer>\n                <StyleArticles />  \n            </PageContainer>\n            \n        </Layout>\n    )\n}\n\nexport default Style"],"sourceRoot":""}