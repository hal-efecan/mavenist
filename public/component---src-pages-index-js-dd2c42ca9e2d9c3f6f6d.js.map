{"version":3,"sources":["webpack:///./src/styles/main.module.scss","webpack:///./src/styles/banner.module.scss","webpack:///./src/components/postlist.js","webpack:///./src/components/subSection.js","webpack:///./src/components/banners/banner1.js","webpack:///./src/pages/index.js"],"names":["module","exports","PostList","postsArr","allMdx","edges","map","post","node","frontmatter","id","excerpt","fields","title","image","section","slug","fluid","childImageSharp","console","log","key","to","style","boxShadow","boxSizing","SubSection","articles","article","Banner1","display","flexDirection","alignItems","src","width","height","scrolling","border","marginWidth","className","BannerStyles","banner","frameBorder","banner_small","Index","data","useEffect","document","body","maxWidth","margin","useSiteMetadata","description","template","siteUrl","siteLanguage","siteLocale","twitter","social","href","rel","crossorigin","titleTemplate","pathname","twitterUsername","main","container"],"mappings":"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","file":"component---src-pages-index-js-dd2c42ca9e2d9c3f6f6d.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"main-module--container--1lrTs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"banner\":\"banner-module--banner--2iMsJ\",\"banner_small\":\"banner-module--banner_small--a3hR3\"};","import React from 'react'\nimport { graphql, useStaticQuery, Link } from 'gatsby'\nimport Img from 'gatsby-image'\n\nimport { SectionTitle, ArticleTitle, ImgContainer,\n  Excerpt, MainChildContainer, DescriptionContainerTop,\n  Divider, MainParentContainer } from '../styled'\n\nconst PostList = () => {\n    const data = useStaticQuery(query)\n    const postsArr = data.allMdx.edges\n    \n    return (\n      <>\n      <MainParentContainer>\n            {\n                postsArr.map(post => {\n                    const { frontmatter, id, excerpt, fields } = post.node\n                    const { title, image, section } = frontmatter\n                    const { slug } = fields\n                    const fluid = image.childImageSharp.fluid\n                    console.log(slug)\n                    return (\n                      <Link key={id} \n                      to={`/${slug}`} \n                      style={{ boxShadow: `none`, boxSizing: `border-box` }}\n                      >\n\n                        <MainChildContainer>\n\n                          <ImgContainer>\n                            <Img fluid={fluid} />\n                          </ImgContainer>\n\n                          <DescriptionContainerTop>\n                            <>\n                              <SectionTitle>{section}</SectionTitle><br/>\n                              <ArticleTitle>{title}</ArticleTitle>\n                            </>\n                            <Excerpt>{excerpt}</Excerpt>\n                          </DescriptionContainerTop>\n\n                        </MainChildContainer>\n                        \n                      </Link>\n                    )\n                })\n            }\n        </MainParentContainer>\n        <Divider />\n        </>\n    )\n}\n\nexport default PostList\n\nconst query = graphql`\n{\n  site {\n        siteMetadata {\n        title\n    }\n  }\n  allMdx(filter: {frontmatter: {isHero: {eq: true}, date: {}}}, sort: {fields: frontmatter___date, order: DESC}) {\n    edges {\n      node {\n        id\n        fields {\n          slug\n        }\n        frontmatter {\n          author\n          date\n          path\n          tags\n          title\n          section\n          isHero\n          image {\n            childImageSharp {\n              id\n              fluid(\n                maxWidth: 400\n                ) {\n                  ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n        excerpt(pruneLength: 100)\n      }\n    }\n  }\n}\n`","import React from 'react'\nimport { graphql, useStaticQuery, Link } from 'gatsby'\nimport Img from 'gatsby-image';\n\n// import { SectionTitle, ArticleTitle, ImgContainer,\n// Excerpt, SubSectionParentContainer, DescriptionContainer,\n// SubSectionChildContainer } from '../styled'\n\nimport { SectionTitle, ArticleTitle, Excerpt,\n  ImgContainer,\n  ParentContainer, DescriptionContainer,\n  ChildContainer } from '../styled/listElements'\n\nconst SubSection = () => {\n    const data = useStaticQuery(query)\n    const articles = data.allMdx.edges\n\n    return (\n\n          <ParentContainer>\n            {\n              articles.map(article => {\n                const { id, frontmatter, excerpt, fields } = article.node\n                const { title, section, image } = frontmatter\n                const { slug } = fields\n                const fluid = image.childImageSharp.fluid\n\n                return (\n                  <Link \n                  style={{ boxShadow: `none`, boxSizing: `border-box` }}\n                  key={id} \n                  to={`/${slug}`}\n                  >\n                    <ChildContainer>\n\n                        <ImgContainer>\n                          <Img fluid={fluid} />\n                        </ImgContainer>\n\n                        <DescriptionContainer>\n                          <div>\n                            <SectionTitle>{section}</SectionTitle><br />\n                            <ArticleTitle>{title}</ArticleTitle>\n                          </div>\n                          <Excerpt>{excerpt}</Excerpt>\n                        </DescriptionContainer>\n\n                    </ChildContainer>\n                  </Link>\n                )\n              })\n            }\n\n            </ParentContainer>\n    )\n}\n\nexport default SubSection\n\nconst query = graphql`\n{\n  allMdx(filter: {frontmatter: {isSubSection: {eq: true}}}, sort: {fields: frontmatter___date, order: DESC}) {\n      edges {\n        node {\n          id\n          frontmatter {\n            author\n            date\n            path\n            tags\n            title\n            section\n            isHero\n            image {\n              childImageSharp {\n                id\n                fluid(maxWidth: 400) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          }\n            fields {\n              slug\n            }\n          excerpt(pruneLength: 250)\n        }\n      }\n  }\n}\n`","import React from 'react'\nimport BannerStyles from '../../styles/banner.module.scss';\n\nconst Banner1 = () => {\n    return (\n        <div style={{ display: `flex`, flexDirection: `column`, alignItems: `center`}}>\n            <iframe src=\"https://rcm-eu.amazon-adsystem.com/e/cm?o=2&p=48&l=ur1&category=piv&banner=0CQ53D02W107RHR3JVR2&f=ifr&linkID=1e76e6a9ad38532d3b6b1c910a6ca86b&t=themavenist-21&tracking_id=themavenist-21\" \n            width=\"728\" \n            height=\"90\"\n            title=\"Amazon Prime banner advertisment\"\n            scrolling=\"no\" \n            border=\"0\" \n            marginWidth=\"0\"\n            className={BannerStyles.banner}\n            frameBorder=\"0\"></iframe>\n\n            <iframe src=\"https://rcm-eu.amazon-adsystem.com/e/cm?o=2&p=22&l=ur1&category=piv&banner=1K2T9PSWF9KM5TPDGW02&f=ifr&linkID=a6cd1d8506b59630f93e5eff702bf352&t=themavenist-21&tracking_id=themavenist-21\" \n            width=\"250\" \n            height=\"250\"\n            title=\"Amazon Prime banner advertisment\"\n            scrolling=\"no\" \n            border=\"0\" \n            marginWidth=\"0\" \n            className={BannerStyles.banner_small}\n            frameBorder=\"0\"></iframe>\n\n        </div>\n    )\n}\n\nexport default Banner1\n","import React, { useEffect } from \"react\"\nimport PostList from '../components/postlist'\nimport SubSection from '../components/subSection'\nimport Layout from \"../components/layout/layout\"\nimport Helmet from 'react-helmet'\nimport Banner1 from '../components/banners/banner1'\n\nimport { useSiteMetadata } from '../hooks/useSiteMetadata'\nimport main from '../styles/main.module.scss'\nimport SEO from 'react-seo-component'\n\nconst Index = ({ data }) => {\n\n  useEffect(() => {\n    document.body.style.maxWidth = \"1366px\"\n    document.body.style.margin = \"0 auto\"\n  }, [])\n\n    const {\n      description,\n      template,\n      title,\n      image,\n      siteUrl,\n      siteLanguage,\n      siteLocale,\n      social: {\n          twitter\n      }\n    } =  useSiteMetadata()\n\n  return (\n            <Layout>\n              <Helmet>\n                <link href=\"https://ir-uk.amazon-adsystem.com\" rel=\"dns-prefetch\" />\n                <link href=\"https://ir-uk.amazon-adsystem.com\" rel=\"preload\" />\n                <link href=\"https://ir-uk.amazon-adsystem.com\" rel=\"preconnect\" crossorigin/>\n              </Helmet>\n              <SEO\n                title={title}\n                titleTemplate={template}\n                description={description}\n                image={`${siteUrl}${image}`}\n                pathname={siteUrl}\n                siteLanguage={siteLanguage}\n                siteLocale={siteLocale}\n                twitterUsername={twitter}\n                />\n\n              <div className={main.container}>\n                <PostList />\n                <Banner1 />\n                <SubSection />\n\n              </div>\n            </Layout>\n        )\n}\n\nexport default Index"],"sourceRoot":""}